/* Generated By:JavaCC: Do not edit this line. ProyectoFase3Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProyectoFase3Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BY = 5;
  /** RegularExpression Id. */
  int WO = 6;
  /** RegularExpression Id. */
  int LO = 7;
  /** RegularExpression Id. */
  int D8 = 8;
  /** RegularExpression Id. */
  int D8B = 9;
  /** RegularExpression Id. */
  int D8D = 10;
  /** RegularExpression Id. */
  int D8H = 11;
  /** RegularExpression Id. */
  int H8 = 12;
  /** RegularExpression Id. */
  int D8O = 13;
  /** RegularExpression Id. */
  int D16 = 14;
  /** RegularExpression Id. */
  int D16B = 15;
  /** RegularExpression Id. */
  int D16D = 16;
  /** RegularExpression Id. */
  int D16O = 17;
  /** RegularExpression Id. */
  int D16H = 18;
  /** RegularExpression Id. */
  int H16 = 19;
  /** RegularExpression Id. */
  int D32 = 20;
  /** RegularExpression Id. */
  int D32B = 21;
  /** RegularExpression Id. */
  int D32D = 22;
  /** RegularExpression Id. */
  int D32O = 23;
  /** RegularExpression Id. */
  int D32H = 24;
  /** RegularExpression Id. */
  int DIG = 25;
  /** RegularExpression Id. */
  int NUM_DECIMAL = 26;
  /** RegularExpression Id. */
  int DIG_BINARIO = 27;
  /** RegularExpression Id. */
  int DIG_HEXA = 28;
  /** RegularExpression Id. */
  int DIG_OCTAL = 29;
  /** RegularExpression Id. */
  int Mas = 30;
  /** RegularExpression Id. */
  int Guion = 31;
  /** RegularExpression Id. */
  int Diagonal = 32;
  /** RegularExpression Id. */
  int Asterisco = 33;
  /** RegularExpression Id. */
  int ParentesisA = 34;
  /** RegularExpression Id. */
  int ParentesisC = 35;
  /** RegularExpression Id. */
  int CorcheteA = 36;
  /** RegularExpression Id. */
  int CorcheteC = 37;
  /** RegularExpression Id. */
  int LlaveA = 38;
  /** RegularExpression Id. */
  int LlaveC = 39;
  /** RegularExpression Id. */
  int DosPuntos = 40;
  /** RegularExpression Id. */
  int PuntoComa = 41;
  /** RegularExpression Id. */
  int Punto = 42;
  /** RegularExpression Id. */
  int Coma = 43;
  /** RegularExpression Id. */
  int Apersant = 44;
  /** RegularExpression Id. */
  int Linea = 45;
  /** RegularExpression Id. */
  int Admiracion = 46;
  /** RegularExpression Id. */
  int Pesos = 47;
  /** RegularExpression Id. */
  int Porcentaje = 48;
  /** RegularExpression Id. */
  int Gato = 49;
  /** RegularExpression Id. */
  int Comentario = 50;
  /** RegularExpression Id. */
  int CODE = 51;
  /** RegularExpression Id. */
  int ORG = 52;
  /** RegularExpression Id. */
  int DDATA = 53;
  /** RegularExpression Id. */
  int BYTE = 54;
  /** RegularExpression Id. */
  int WORD = 55;
  /** RegularExpression Id. */
  int LONG = 56;
  /** RegularExpression Id. */
  int EXT = 57;
  /** RegularExpression Id. */
  int DEF = 58;
  /** RegularExpression Id. */
  int EQU = 59;
  /** RegularExpression Id. */
  int END = 60;
  /** RegularExpression Id. */
  int Datos = 61;
  /** RegularExpression Id. */
  int Memoria = 62;
  /** RegularExpression Id. */
  int PC = 63;
  /** RegularExpression Id. */
  int SR = 64;
  /** RegularExpression Id. */
  int CCR = 65;
  /** RegularExpression Id. */
  int SP = 66;
  /** RegularExpression Id. */
  int EXG = 67;
  /** RegularExpression Id. */
  int FMOVE = 68;
  /** RegularExpression Id. */
  int FSMOVE = 69;
  /** RegularExpression Id. */
  int FDMOVE = 70;
  /** RegularExpression Id. */
  int FMOVEM = 71;
  /** RegularExpression Id. */
  int LEA = 72;
  /** RegularExpression Id. */
  int LINK = 73;
  /** RegularExpression Id. */
  int MOVE = 74;
  /** RegularExpression Id. */
  int MOVE16 = 75;
  /** RegularExpression Id. */
  int MOVEA = 76;
  /** RegularExpression Id. */
  int MOVEM = 77;
  /** RegularExpression Id. */
  int MOVEP = 78;
  /** RegularExpression Id. */
  int MOVEQ = 79;
  /** RegularExpression Id. */
  int PEA = 80;
  /** RegularExpression Id. */
  int UNLK = 81;
  /** RegularExpression Id. */
  int ADD = 82;
  /** RegularExpression Id. */
  int ADDA = 83;
  /** RegularExpression Id. */
  int ADDI = 84;
  /** RegularExpression Id. */
  int ADDQ = 85;
  /** RegularExpression Id. */
  int ADDX = 86;
  /** RegularExpression Id. */
  int CLR = 87;
  /** RegularExpression Id. */
  int CMP = 88;
  /** RegularExpression Id. */
  int CMPA = 89;
  /** RegularExpression Id. */
  int CMPI = 90;
  /** RegularExpression Id. */
  int CMPM = 91;
  /** RegularExpression Id. */
  int CMP2 = 92;
  /** RegularExpression Id. */
  int DIVS = 93;
  /** RegularExpression Id. */
  int DIVU = 94;
  /** RegularExpression Id. */
  int DIVSL = 95;
  /** RegularExpression Id. */
  int DIVUL = 96;
  /** RegularExpression Id. */
  int EXTB = 97;
  /** RegularExpression Id. */
  int MULS = 98;
  /** RegularExpression Id. */
  int MULU = 99;
  /** RegularExpression Id. */
  int NEG = 100;
  /** RegularExpression Id. */
  int NEGX = 101;
  /** RegularExpression Id. */
  int SUB = 102;
  /** RegularExpression Id. */
  int SUBA = 103;
  /** RegularExpression Id. */
  int SUBI = 104;
  /** RegularExpression Id. */
  int SUBQ = 105;
  /** RegularExpression Id. */
  int SUBX = 106;
  /** RegularExpression Id. */
  int AND = 107;
  /** RegularExpression Id. */
  int ANDI = 108;
  /** RegularExpression Id. */
  int EOR = 109;
  /** RegularExpression Id. */
  int EORI = 110;
  /** RegularExpression Id. */
  int NOT = 111;
  /** RegularExpression Id. */
  int OR = 112;
  /** RegularExpression Id. */
  int ORI = 113;
  /** RegularExpression Id. */
  int ASL = 114;
  /** RegularExpression Id. */
  int ASR = 115;
  /** RegularExpression Id. */
  int LSL = 116;
  /** RegularExpression Id. */
  int LSR = 117;
  /** RegularExpression Id. */
  int ROL = 118;
  /** RegularExpression Id. */
  int ROR = 119;
  /** RegularExpression Id. */
  int ROXL = 120;
  /** RegularExpression Id. */
  int ROXR = 121;
  /** RegularExpression Id. */
  int SWAP = 122;
  /** RegularExpression Id. */
  int BCHG = 123;
  /** RegularExpression Id. */
  int BCLR = 124;
  /** RegularExpression Id. */
  int BSET = 125;
  /** RegularExpression Id. */
  int BTST = 126;
  /** RegularExpression Id. */
  int BFCHG = 127;
  /** RegularExpression Id. */
  int BFCLR = 128;
  /** RegularExpression Id. */
  int BFEXTS = 129;
  /** RegularExpression Id. */
  int BFEXTU = 130;
  /** RegularExpression Id. */
  int BFFFO = 131;
  /** RegularExpression Id. */
  int BFINS = 132;
  /** RegularExpression Id. */
  int BFSET = 133;
  /** RegularExpression Id. */
  int BFTST = 134;
  /** RegularExpression Id. */
  int ABCD = 135;
  /** RegularExpression Id. */
  int NBCD = 136;
  /** RegularExpression Id. */
  int PACK = 137;
  /** RegularExpression Id. */
  int SBCD = 138;
  /** RegularExpression Id. */
  int UNPK = 139;
  /** RegularExpression Id. */
  int Bcc = 140;
  /** RegularExpression Id. */
  int FBcc = 141;
  /** RegularExpression Id. */
  int DBcc = 142;
  /** RegularExpression Id. */
  int FDBcc = 143;
  /** RegularExpression Id. */
  int Scc = 144;
  /** RegularExpression Id. */
  int FScc = 145;
  /** RegularExpression Id. */
  int BRA = 146;
  /** RegularExpression Id. */
  int BSR = 147;
  /** RegularExpression Id. */
  int JMP = 148;
  /** RegularExpression Id. */
  int JSR = 149;
  /** RegularExpression Id. */
  int NOP = 150;
  /** RegularExpression Id. */
  int FNOP = 151;
  /** RegularExpression Id. */
  int RTD = 152;
  /** RegularExpression Id. */
  int RTR = 153;
  /** RegularExpression Id. */
  int RTS = 154;
  /** RegularExpression Id. */
  int TST = 155;
  /** RegularExpression Id. */
  int FTST = 156;
  /** RegularExpression Id. */
  int FRESTORE = 157;
  /** RegularExpression Id. */
  int FSAVE = 158;
  /** RegularExpression Id. */
  int MOVEC = 159;
  /** RegularExpression Id. */
  int MOVES = 160;
  /** RegularExpression Id. */
  int RESET = 161;
  /** RegularExpression Id. */
  int RTE = 162;
  /** RegularExpression Id. */
  int STOP = 163;
  /** RegularExpression Id. */
  int BKTP = 164;
  /** RegularExpression Id. */
  int CHK = 165;
  /** RegularExpression Id. */
  int CHK2 = 166;
  /** RegularExpression Id. */
  int ILEGAL = 167;
  /** RegularExpression Id. */
  int TRAP = 168;
  /** RegularExpression Id. */
  int TRAPcc = 169;
  /** RegularExpression Id. */
  int FTRAPcc = 170;
  /** RegularExpression Id. */
  int TRAPV = 171;
  /** RegularExpression Id. */
  int CC = 172;
  /** RegularExpression Id. */
  int LS = 173;
  /** RegularExpression Id. */
  int CS = 174;
  /** RegularExpression Id. */
  int LT = 175;
  /** RegularExpression Id. */
  int EQ = 176;
  /** RegularExpression Id. */
  int MI = 177;
  /** RegularExpression Id. */
  int NE = 178;
  /** RegularExpression Id. */
  int GE = 179;
  /** RegularExpression Id. */
  int PL = 180;
  /** RegularExpression Id. */
  int GT = 181;
  /** RegularExpression Id. */
  int T = 182;
  /** RegularExpression Id. */
  int HI = 183;
  /** RegularExpression Id. */
  int VC = 184;
  /** RegularExpression Id. */
  int LE = 185;
  /** RegularExpression Id. */
  int VS = 186;
  /** RegularExpression Id. */
  int Identificador = 187;
  /** RegularExpression Id. */
  int LETRA = 188;
  /** RegularExpression Id. */
  int CADENA = 189;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"B\"",
    "\"W\"",
    "\"L\"",
    "<D8>",
    "<D8B>",
    "<D8D>",
    "<D8H>",
    "<H8>",
    "<D8O>",
    "<D16>",
    "<D16B>",
    "<D16D>",
    "<D16O>",
    "<D16H>",
    "<H16>",
    "<D32>",
    "<D32B>",
    "<D32D>",
    "<D32O>",
    "<D32H>",
    "<DIG>",
    "<NUM_DECIMAL>",
    "<DIG_BINARIO>",
    "<DIG_HEXA>",
    "<DIG_OCTAL>",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"$\"",
    "\"%\"",
    "\"#\"",
    "<Comentario>",
    "\"CODE\"",
    "\"ORG\"",
    "\"DDATA\"",
    "\"BYTE\"",
    "\"WORD\"",
    "\"LONG\"",
    "\"EXT\"",
    "\"DEF\"",
    "\"EQU\"",
    "\"END\"",
    "<Datos>",
    "<Memoria>",
    "\"PC\"",
    "\"SR\"",
    "\"CCR\"",
    "\"SP\"",
    "\"EXG\"",
    "\"FMOVE\"",
    "\"FSMOVE\"",
    "\"FDMOVE\"",
    "\"FMOVEM\"",
    "\"LEA\"",
    "\"LINK\"",
    "\"MOVE\"",
    "\"MOVE16\"",
    "\"MOVEA\"",
    "\"MOVEM\"",
    "\"MOVEP\"",
    "\"MOVEQ\"",
    "\"PEA\"",
    "\"UNLK\"",
    "\"ADD\"",
    "\"ADDA\"",
    "\"ADDI\"",
    "\"ADDQ\"",
    "\"ADDX\"",
    "\"CLR\"",
    "\"CMP\"",
    "\"CMPA\"",
    "\"CMPI\"",
    "\"CMPM\"",
    "\"CMP2\"",
    "\"DIVS\"",
    "\"DIVU\"",
    "\"DIVSL\"",
    "\"DIVUL\"",
    "\"EXTB\"",
    "\"MULS\"",
    "\"MULU\"",
    "\"NEG\"",
    "\"NEGX\"",
    "\"SUB\"",
    "\"SUBA\"",
    "\"SUBI\"",
    "\"SUBQ\"",
    "\"SUBX\"",
    "\"AND\"",
    "\"ANDI\"",
    "\"EOR\"",
    "\"EORI\"",
    "\"NOT\"",
    "\"OR\"",
    "\"ORI\"",
    "\"ASL\"",
    "\"ASR\"",
    "\"LSL\"",
    "\"LSR\"",
    "\"ROL\"",
    "\"ROR\"",
    "\"ROXL\"",
    "\"ROXR\"",
    "\"SWAP\"",
    "\"BCHG\"",
    "\"BCLR\"",
    "\"BSET\"",
    "\"BTST\"",
    "\"BFCHG\"",
    "\"BFCLR\"",
    "\"BFEXTS\"",
    "\"BFEXTU\"",
    "\"BFFFO\"",
    "\"BFINS\"",
    "\"BFSET\"",
    "\"BFTST\"",
    "\"ABCD\"",
    "\"NBCD\"",
    "\"PACK\"",
    "\"SBCD\"",
    "\"UNPK\"",
    "\"Bcc\"",
    "\"FBcc\"",
    "\"DBcc\"",
    "\"FDBcc\"",
    "\"Scc\"",
    "\"FScc\"",
    "\"BRA\"",
    "\"BSR\"",
    "\"JMP\"",
    "\"JSR\"",
    "\"NOP\"",
    "\"FNOP\"",
    "\"RTD\"",
    "\"RTR\"",
    "\"RTS\"",
    "\"TST\"",
    "\"FTST\"",
    "\"FRESTORE\"",
    "\"FSAVE\"",
    "\"MOVEC\"",
    "\"MOVES\"",
    "\"RESET\"",
    "\"RTE\"",
    "\"STOP\"",
    "\"BKTP\"",
    "\"CHK\"",
    "\"CHK2\"",
    "\"ILEGAL\"",
    "\"TRAP\"",
    "\"TRAPcc\"",
    "\"FTRAPcc\"",
    "\"TRAPV\"",
    "\"CC\"",
    "\"LS\"",
    "\"CS\"",
    "\"LT\"",
    "\"EQ\"",
    "\"MI\"",
    "\"NE\"",
    "\"GE\"",
    "\"PL\"",
    "\"GT\"",
    "\"T\"",
    "\"HI\"",
    "\"VC\"",
    "\"LE\"",
    "\"VS\"",
    "<Identificador>",
    "<LETRA>",
    "<CADENA>",
  };

}
